name: CI-CD-Pipeline-to_AWS

env:
  EB_PACKAGE_S3_BUCKET_NAME: "test-v-package1"
  EB_APPLICATION_NAME: "Getting-started-app-env1"
  EB_ENVIROMENT_NAME: "Getting-started-app-env1-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-west-2"

on:
 push:
   branches:
          - master


jobs:
  my_ci-pipline:
    runs-on: ubuntu-latest
    
    steps:
     - name: Run a one line script
       uses: actions/checkout@v1
     - name: Create zip deployment package 
       run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
     - name: Configure my AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id:  ${{ secrets.MY_AWS_ACCESS_KEY }}
         aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
         aws-region:  ${{ env.AWS_REGION_NAME}}
         
     - name: Copy Deploement package to S3 bucket 
       run:  aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{env.EB_PACKAGE_S3_BUCKET_NAME}}/
       
     - name: Finished!!
       run: echo "CI Pipline finished"
  my_cd-pipline: 
    runs-on: ubuntu-latest
    needs: [my_ci-pipline]
    
  
    steps:
     - name: Configure my AWS Credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id:  ${{ secrets.MY_AWS_ACCESS_KEY }}
         aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
         aws-region:  ${{ env.AWS_REGION_NAME}} 
      
     -  name: Create new ElasticBeansTalk Application
        run: |
         aws elasticbeanstalk create-application-version \
         --application-name ${{ env.EB_APPLICATION_NAME }} \
         --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
         --version-label "Ver-${{ github.sha }}" \
         --description "CoimmitSHA-${{ github.sha }}"
     -  name: Deploy new ElasticBeansTalk Spplication version
        run:  aws elasticbeanstalk update-environment --environment-name ${{  env.EB_ENVIROMENT_NAME }}
     -  name: Finished CD Pipline 
        run: echo "CD Pipline finished"
         
         
         
         
      
        
     
     
    
