name:  MyGitHubAction-Basics
env:
  APPLICATION_NAME     : "MyFlask"
  DEPLOY_PACKAGE_NAME  : "flask-deploy-ver-${{ github.sha }}"

on: 
 push:
   branches: 
     - master
 branch_protection_rule:
    types: [created, deleted]    
        
jobs:
  my_testing1:
     runs-on: ubuntu-latest
    
     steps:
       - name: Run a one-line script
         run: echo Hello, World!
       - name: Execute few commands
         run: |
           echo "Hello message1"
           echo "Hello message2"
           echo "Application name: ${{ env.APPLICATION_NAME }}"
       - name: List current Folder
         run: ls -la
       - name: Git clone my repo
         uses: actions/checkout@v1 
       - name: List current Folder
         run: ls -la     
  my_deploy:
      runs-on: ubuntu-latest
      needs: [my_testing1]
      env:
        VAR1 : "This is Job Level Vatiable1"
        VAR2 : "This is Job Level Vatiable2"
      steps:
        - name: Run a one-line script
          run: echo Hello, World!       
        - name: Print env vars
          run : |
             echo "Var1 = ${{ env.VAR1 }}"
             echo "Var2 = ${{ env.VAR2 }}" 
             echo "Var3 = $LOCAL_VAR"
          env:
            LOCAL_VAR: "Local var"
            
        - name: Printing deployemnt package
          run: echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}" 
        - name: Lets test some package
          run: aws --version
        - name: Lets test some package1
          run: zip --version
        - name: Cache Gradle packages
          uses: actions/cache@v3
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper   
  hello_world_job:
      runs-on: ubuntu-latest
      name: A job to say hello
      steps:
        - name: Hello world action step
          id: hello
          uses: actions/hello-world-docker-action@v2
          with:
            who-to-greet: 'Mona the Octocat'
        # Use the output from the `hello` step
        - name: Get the output time
          run: echo "The time was ${{ steps.hello.outputs.time }}"       
