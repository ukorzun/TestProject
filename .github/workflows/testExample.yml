name:  MyGitHubAction-Basics
env:
  APPLICATION_NAME     : "MyFlask"
  DEPLOY_PACKAGE_NAME  : "flask-deploy-ver-${{ github.sha }}"

on: 
 push:
   branches: 
     - master
     
 workflow_dispatch:
 schedule:
   - cron: '40 19 * * *' # once a day at 19:40 UTC / 11:40 PST

permissions:
  contents: read
  issues: write     
   
jobs:
  my_testing1:
     runs-on: ubuntu-latest
    
     steps:
       - name: Run a one-line script
         run: echo Hello, World!
       - name: Execute few commands
         run: |
           echo "Hello message1"
           echo "Hello message2"
           echo "Application name: ${{ env.APPLICATION_NAME }}"
       - name: List current Folder
         run: ls -la
       - name: Git clone my repo
         uses: actions/checkout@v1 
       - name: List current Folder
         run: ls -la     
  my_deploy:
      runs-on: ubuntu-latest
      needs: [my_testing1]
      env:
        VAR1 : "This is Job Level Vatiable1"
        VAR2 : "This is Job Level Vatiable2"
      steps:
        - name: Run a one-line script
          run: echo Hello, World!       
        - name: Print env vars
          run : |
             echo "Var1 = ${{ env.VAR1 }}"
             echo "Var2 = ${{ env.VAR2 }}" 
             echo "Var3 = $LOCAL_VAR"
          env:
            LOCAL_VAR: "Local var"
            
        - name: Printing deployemnt package
          run: echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}" 
        - name: Lets test some package
          run: aws --version
        - name: Lets test some package1
          run: zip --version           
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - name: Hello world action step
        id: hello
        uses: actions/hello-world-docker-action@v2
        with:
          who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"
  check_all_links:
    name: Check all links
    if: github.repository == 'github/docs-internal'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.DOCUBOT_READORG_REPO_WORKFLOW_SCOPES }}
      FIRST_RESPONDER_PROJECT: Docs content first responder
      REPORT_AUTHOR: docubot
      REPORT_LABEL: broken link report
      REPORT_REPOSITORY: github/docs-content
    steps:
      - name: Check out repo's default branch
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.13.x
          cache: npm
      - name: npm ci
        run: npm ci
      - name: npm run build
        run: npm run build
      - name: Run script
        run: |
          script/check-english-links.js > broken_links.md        
        
